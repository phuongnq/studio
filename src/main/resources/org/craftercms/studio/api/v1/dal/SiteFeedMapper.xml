<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright (C) 2007-2020 Crafter Software Corporation. All Rights Reserved.
  ~
  ~ This program is free software: you can redistribute it and/or modify
  ~ it under the terms of the GNU General Public License version 3 as published by
  ~ the Free Software Foundation.
  ~
  ~ This program is distributed in the hope that it will be useful,
  ~ but WITHOUT ANY WARRANTY; without even the implied warranty of
  ~ MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  ~ GNU General Public License for more details.
  ~
  ~ You should have received a copy of the GNU General Public License
  ~ along with this program.  If not, see <http://www.gnu.org/licenses/>.
  -->

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="org.craftercms.studio.api.v1.dal.SiteFeedMapper">

    <resultMap id="SiteFeedMap" type="org.craftercms.studio.api.v1.dal.SiteFeed">
        <id property="id" column="id" />
        <result property="siteUuid" column="site_uuid"/>
        <result property="siteId" column="site_id"/>
        <result property="name" column="name"/>
        <result property="description" column="description"/>
        <result property="status" column="status" jdbcType="VARCHAR" javaType="String"/>
        <result property="deleted" column="deleted" javaType="Integer" jdbcType="INTEGER"/>
        <result property="lastCommitId" column="last_commit_id" jdbcType="VARCHAR" javaType="String"/>
        <result property="publishingEnabled" column="publishing_enabled" javaType="Integer" jdbcType="INTEGER"/>
        <result property="publishingStatusMessage" column="publishing_status_message" jdbcType="VARCHAR" javaType="String"/>
        <result property="lastVerifiedGitlogCommitId" column="last_verified_gitlog_commit_id" jdbcType="VARCHAR" javaType="String"/>
        <result property="sandboxBranch" column="sandbox_branch"/>
        <result property="searchEngine" column="search_engine" />
    </resultMap>

    <parameterMap id="SiteFeedMapParams" type="org.craftercms.studio.api.v1.dal.SiteFeed">
        <parameter property="id" jdbcType="BIGINT" />
        <parameter property="siteUuid" jdbcType="VARCHAR"/>
        <parameter property="siteId" jdbcType="VARCHAR"/>
        <parameter property="name" jdbcType="VARCHAR"/>
        <parameter property="description" jdbcType="VARCHAR"/>
        <parameter property="status" jdbcType="VARCHAR"/>
        <parameter property="deleted" jdbcType="INTEGER"/>
        <parameter property="lastCommitId" jdbcType="VARCHAR"/>
        <parameter property="publishingEnabled" jdbcType="INTEGER"/>
        <parameter property="publishingStatusMessage" jdbcType="VARCHAR" />
        <parameter property="lastVerifiedGitlogCommitId" jdbcType="VARCHAR" />
        <parameter property="sandboxBranch" jdbcType="VARCHAR"/>
        <parameter property="searchEngine" jdbcType="VARCHAR"/>
    </parameterMap>

    <select id="getSites" resultMap="SiteFeedMap">
        SELECT * FROM site WHERE system = 0 AND deleted = 0
    </select>

    <select id="countSites" resultType="int">
        SELECT count(1) FROM site WHERE NOT site_id = 'studio_root' AND deleted = 0
    </select>

    <select id="getSite" resultMap="SiteFeedMap" parameterType="java.util.Map">
        SELECT * FROM site WHERE site_id = #{siteId} and deleted = 0
    </select>

    <insert id="createSite" parameterType="org.craftercms.studio.api.v1.dal.SiteFeed" flushCache="true">
        insert into site (site_uuid, site_id, name, description, status, deleted, last_commit_id,
        publishing_status_message, sandbox_branch, search_engine)
        values (#{siteUuid}, #{siteId}, #{name}, #{description}, #{status}, #{deleted}, #{lastCommitId},
        #{publishingStatusMessage}, #{sandboxBranch}, #{searchEngine})
    </insert>

    <update id="deleteSite" parameterType="java.util.Map" >
        UPDATE site SET deleted = 1 WHERE site_id = #{siteId} AND deleted = 0
    </update>

    <update id="updateLastCommitId" parameterType="java.util.Map">
        UPDATE site SET last_commit_id = #{lastCommitId} WHERE site_id = #{siteId} AND deleted = 0
    </update>

    <select id="getLastCommitId" parameterType="java.util.Map" resultType="java.lang.String">
        SELECT last_commit_id FROM site WHERE site_id = #{siteId} AND deleted = 0
    </select>

    <select id="exists" parameterType="java.lang.String" resultType="int">
        SELECT count(1) FROM site WHERE site_id = #{siteId} AND deleted = 0
    </select>

    <select id="existsById" parameterType="java.lang.String" resultType="int">
        SELECT count(1) FROM site WHERE id = #{id} AND deleted = 0
    </select>

    <select id="existsByName" parameterType="java.lang.String" resultType="int">
        SELECT count(1) FROM site WHERE name = #{name} AND deleted = 0
    </select>

    <select id="getSitesPerUserQuery" resultType="java.lang.String" parameterType="java.util.Map">
        SELECT DISTINCT cs.site_id as siteid
        FROM site cs
        WHERE cs.system = 0
        AND cs.deleted = 0
        ORDER BY cs.site_id
        LIMIT #{start}, #{number}
    </select>

    <select id="getSitesPerUserQueryTotal" resultType="int" parameterType="java.util.Map">
        SELECT COUNT(DISTINCT cs.site_id)
        FROM site cs
        WHERE cs.system = 0
        AND deleted = 0
        ORDER BY cs.site_id
    </select>

    <select id="getSitesPerUserData" resultMap="SiteFeedMap" parameterType="java.util.Map">
        SELECT *
        FROM site cs
        WHERE site_id IN
        <foreach item="siteid" index="index" collection="siteids"
                 open="(" separator="," close=")">
            #{siteid}
        </foreach>
        AND system = 0
        AND deleted = 0
        ORDER BY site_id
    </select>

    <update id="enablePublishing" parameterType="java.util.Map">
        UPDATE site SET publishing_enabled = #{enabled} WHERE site_id = #{siteId} AND deleted = 0
    </update>

    <update id="updatePublishingStatusMessage" parameterType="java.util.Map">
        UPDATE site SET publishing_status_message = #{message} WHERE site_id = #{siteId} AND deleted = 0
    </update>

    <update id="updateLastVerifiedGitlogCommitId" parameterType="java.util.Map">
        UPDATE site SET last_verified_gitlog_commit_id = #{commitId} WHERE site_id = #{siteId} AND deleted = 0
    </update>

    <select id="getDeletedSites" resultMap="SiteFeedMap">
        SELECT * FROM site WHERE deleted = 1 AND system = 0
    </select>
</mapper>